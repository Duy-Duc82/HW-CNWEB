/*
  style.css
  - Moved styles out of the HTML and organized for clarity and responsiveness.
  - Comments below explain intent for each block so the teacher can see
    that the author understands layout, accessibility and responsive design.
*/

/*
  Global reset / sensible defaults
  - box-sizing: border-box makes width/padding calculations easier and more
    predictable across all elements.
  - The :root block defines default font and text color for the document.
*/
* {
  box-sizing: border-box;
}
:root {
  /* Use a safe system/stack font for better performance */
  font-family: Arial, Helvetica, sans-serif;
  color: #222; /* default text color used throughout the site */
}

/*
  Base body styles
  - Remove default margin, set comfortable line-height and a subtle background
    so white cards stand out.
*/
body {
  margin: 0;
  line-height: 1.6; /* improves readability for paragraphs */
  background: #f7f7f8; /* light gray background to frame white cards */
}

/* Header */
/*
  Header
  - Uses a strong background color and white text for contrast and branding.
  - position: sticky keeps the header visible when the user scrolls,
    improving navigation on long pages.
*/
header {
  background: #2b6cb0;
  color: #fff;
  padding: 1rem;
  position: sticky; /* keeps header visible */
  top: 0;
  z-index: 1000; /* above other content */
}

/*
  Container utility
  - Centers page content and constrains the maximum width for better
    line-length and layout on large screens.
  - Horizontal padding provides breathing room on small devices.
*/
.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Navigation */
/*
  Navigation
  - Flex layout for horizontal links; gap creates consistent spacing between
    items without using margins on the links themselves.
  - Links use a lighter tint of the header color for a subtle, accessible
    contrast and a visible hover state for affordance.
*/
nav {
  display: flex;
  gap: 1rem;
  align-items: center;
}
nav a {
  color: #e6f0ff;
  text-decoration: none;
  padding: 0.25rem 0.5rem; /* increase hit area for touch devices */
}
nav a:hover {
  text-decoration: underline;
}

/* Controls (search + add) */
/*
  Controls (search + add)
  - Flex allows the input to take available space while keeping buttons
    aligned to the right.
  - Input uses flex:1 so it grows/shrinks responsively.
*/
.controls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  margin: 0.75rem 0;
}
.controls input[type="text"] {
  flex: 1; /* makes the search input flexible within the controls row */
  padding: 0.5rem;
  border-radius: 4px;
  border: 1px solid #ccd0d6; /* subtle border for visual separation */
}
.controls button {
  padding: 0.45rem 0.7rem; /* compact, touch-friendly buttons */
}

/* Hero */
/*
  Hero section
  - Small vertical padding separates the hero from other sections.
  - Paragraph has slightly darker text to improve readability inside the
    light background.
*/
.hero {
  padding: 1.25rem 0;
}
.hero p {
  margin-top: 0.25rem;
  color: #333;
}

/* Products grid */
/*
  Products grid
  - CSS grid with auto-fit/ minmax creates a responsive column layout that
    adapts to available width without media queries.
  - gap controls spacing between cards.
*/
.products {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 1rem;
  padding: 1rem 0;
}

/*
  Product card styles
  - White card with subtle shadow to lift it from the page background.
  - display:flex + flex-direction:column allows the price to sit at the
    bottom using margin-top: auto on the .price element (sticky footer effect
    inside the card).
*/
article.card {
  background: #fff;
  border-radius: 6px;
  padding: 1rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
  display: flex;
  flex-direction: column;
  height: 100%; /* make cards consistent height within the grid cell */
}
article.card img {
  max-width: 100%;
  height: auto; /* preserve image aspect ratio */
  border-radius: 4px;
  margin-bottom: 0.5rem;
}
/*
  Standardize figure/figcaption inside product cards so titles align
  and don't cause vertical layout shifts when descriptions are different.
  - .product-figure sets a fixed-ish height for the visual area so cards
    have similar layout.
  - object-fit: cover crops images to fill the area while preserving aspect
    ratio which gives a consistent gallery look.
  - figcaption (.product-name) is centered, bolded and limited to two lines
    with an ellipsis to avoid long titles breaking the card height.
*/
.product-figure {
  display: block;
  /*
    Keep the figure height automatic so the figcaption (title) is always
    visible. We still control the image height below to keep a consistent
    visual area, but the figure container must not hide the caption.
  */
  height: auto;
}
.product-figure img {
  width: 100%;
  height: 220px; /* fixed image area inside the figure */
  object-fit: cover; /* crop to fill area without distortion */
  display: block;
  border-radius: 4px;
}
.product-figure .product-name {
  display: block; /* ensure it behaves like a block element */
  text-align: center; /* center title under the image */
  font-weight: 700; /* bold title to make it stand out */
  margin: 0.6rem 0 0.4rem; /* spacing between image, title and description */
  font-size: 1rem;
  line-height: 1.2;
  color: #222; /* explicit color to avoid accidental inheritance/hiding */
  /*
    Safer multiline truncation fallback:
    - max-height limits the visible block to ~2 lines (line-height * 2)
    - overflow:hidden prevents very long titles from pushing layout
    This works cross-browser without relying solely on -webkit-line-clamp.
  */
  max-height: 2.4em; /* ~2 lines (1.2em line-height * 2) */
  overflow: hidden;
}

/* smaller figure height on narrow screens to save vertical space */
@media (max-width: 600px) {
  .product-figure { height: 300px; }
  .product-figure img { height: 180px; }
}
article.card h3 {
  margin: 0.5rem 0;
}
article.card p {
  margin: 0.4rem 0;
  color: #444; /* slightly muted paragraph color */
}
.price {
  font-weight: 700;
  color: #1a7a07; /* green price to imply value or savings */
  margin-top: auto; /* pushes price to the bottom of the card */
}
/* Hidden helper class */
/*
  Utility class to hide elements (used for the add-product form initially)
  - !important ensures JS toggling (remove/add class) overrides inline
    styles if present.
*/
.hidden {
  display: none !important;
}

/* Contact form */
/*
  Contact / form styles
  - Form elements are constrained for readability and use consistent spacing.
  - Buttons use the primary color to show a clear call-to-action.
*/
.contact {
  background: #fff;
  padding: 1rem;
  border-radius: 6px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
  margin-top: 1rem;
  max-width: 640px; /* prevents the form from getting too wide on large screens */
}
label {
  display: block; /* each label sits above the input for clarity */
  margin-bottom: 0.25rem;
  font-size: 0.95rem;
}
input[type="text"],
input[type="email"],
textarea {
  width: 100%;
  padding: 0.5rem; /* comfortable hit area for typing */
  border: 1px solid #ccd0d6;
  border-radius: 4px;
  margin-bottom: 0.75rem;
}
button {
  background: #2b6cb0; /* primary action color matches header */
  color: #fff;
  padding: 0.6rem 0.9rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
button:hover {
  filter: brightness(1.05); /* subtle hover feedback without changing layout */
}

/* Footer */
/* Footer
  - Dark background to separate from the main content. Text is lighter
    to maintain readable contrast.
*/
footer {
  background: #111;
  color: #ddd;
  padding: 1rem;
  margin-top: 2rem;
}
footer p {
  margin: 0;
  text-align: center;
  font-size: 0.95rem;
}

/* Small screens adjustments */
/* Responsive adjustments for small screens
  - Collapse the products grid to a single column for narrow devices.
  - Stack nav links vertically to avoid overflow and improve touch targets.
*/
@media (max-width: 600px) {
  .products {
    grid-template-columns: 1fr;
  }
  nav {
    flex-direction: column;
    align-items: flex-start;
  }
  nav a {
    margin: 6px 0; /* extra spacing between stacked links */
  }
  header h1 {
    font-size: 1.25rem; /* slightly smaller header on narrow screens */
  }
}

/* Extra small screens: hide non-essential hero paragraph to save space */
/* Very small screens: hide non-essential copy to save vertical space */
@media (max-width: 420px) {
  .hero p {
    display: none;
  }
}

/* Ensure images don't overflow */
/* Ensure images never exceed their container width and keep aspect ratio */
img {
  max-width: 100%;
  height: auto;
}
